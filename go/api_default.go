/*
 * API POC Server
 *
 * This is a proof of concept OpenAPI server
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"fmt"
	"net/http"
	"os"
)

// Need to figure out how to get the openapi generator to add the string modifier
type Payload struct {
	Operation string `json:"operation"`
	A int64  `json:"a,string"`
	B int64  `json:"b,string"`
}

func PostMath(w http.ResponseWriter, r *http.Request) {
	var id Payload
	var answer int64

	if r.Body == nil {
		w.WriteHeader(http.StatusBadRequest)
		w.Write([]byte("Please send a request body"))
		return
	}
	err := json.NewDecoder(r.Body).Decode(&id)
	if err != nil {
		w.WriteHeader(http.StatusBadRequest)
		w.Write([]byte(err.Error()))
		return
	}

	if id.Operation == "ADD" {
		answer = id.A + id.B
	} else if id.Operation == "SUBTRACT" {
		answer = id.A - id.B
	} else if id.Operation == "MULTIPLY" {
		answer = id.A * id.B
	} else {
		w.WriteHeader(http.StatusTeapot)
		w.Write([]byte(fmt.Sprintf("Invalid operator: %s", id.Operation)))
		return
	}

	hostname := os.Getenv("HOSTNAME")
	fmt.Println(hostname)
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	result, err := json.Marshal(&OutputData{Result: answer})
	if err != nil {
		fmt.Println(err)
		return
	}
	w.Write(result)
}
